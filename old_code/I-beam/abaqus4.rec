# -*- coding: mbcs -*-
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=1.0)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(-0.00385, 
    -0.1904), point2=(0.00385, 0.1904))
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(-0.08885, 
    0.1904), point2=(0.08885, 0.2013))
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(-0.08885, 
    -0.1904), point2=(0.08885, -0.2013))
mdb.models['Model-1'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[5], point1=(0.0, 
    -0.1904))
mdb.models['Model-1'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[13], point1=(0.0, 
    -0.1904))
mdb.models['Model-1'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3], point1=(0.0, 
    0.1904))
mdb.models['Model-1'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[9], point1=(0.0, 
    0.1904))
mdb.models['Model-1'].sketches['__profile__'].FilletByRadius(curve1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[15], curve2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2], nearPoint1=(
    -0.00485, -0.1904), nearPoint2=(0.00385, -0.1894), radius=0.0102)
mdb.models['Model-1'].sketches['__profile__'].FilletByRadius(curve1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[14], curve2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4], nearPoint1=(
    0.00485, -0.1904), nearPoint2=(0.00385, -0.1894), radius=0.0102)
mdb.models['Model-1'].sketches['__profile__'].FilletByRadius(curve1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4], curve2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[16], nearPoint1=(
    0.00385, 0.0942), nearPoint2=(0.00485, 0.0952), radius=0.0102)
mdb.models['Model-1'].sketches['__profile__'].FilletByRadius(curve1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2], curve2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[17], nearPoint1=(
    -0.00385, 0.0942), nearPoint2=(-0.00485, 0.0952), radius=0.0102)
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Part-1', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-1'].BaseSolidExtrude(depth=1.0, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].parts['Part-1'].seedPart(deviationFactor=0.05, 
    minSizeFactor=0.001, size=0.05)
mdb.models['Model-1'].parts['Part-1'].generateMesh()
mdb.models['Model-1'].parts['Part-1'].Set(cells=
    mdb.models['Model-1'].parts['Part-1'].cells.getSequenceFromMask(('[#1 ]', 
    ), ), name='I_section_geometry')
mdb.models['Model-1'].Material(name='I-material')
mdb.models['Model-1'].materials['I-material'].Elastic(table=((210000000000.0, 
    210000000000.0, 210000000000.0, 0.3, 0.3, 0.3, 81000000000.0, 
    81000000000.0, 81000000000.0), ), type=ENGINEERING_CONSTANTS)
mdb.models['Model-1'].HomogeneousSolidSection(material='I-material', name=
    'I-section', thickness=None)
mdb.models['Model-1'].parts['Part-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-1'].sets['I_section_geometry'], 
    sectionName='I-section', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['Part-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=
    mdb.models['Model-1'].parts['Part-1'].sets['I_section_geometry'], 
    stackDirection=STACK_3)
mdb.models['Model-1'].StaticStep(name='loading', previous='Initial')
mdb.models['Model-1'].fieldOutputRequests['F-Output-1'].setValues(variables=(
    'S', 'MISES', 'SEQUT', 'U', 'COORD'))
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='I_beam-1', 
    part=mdb.models['Model-1'].parts['Part-1'])
mdb.models['Model-1'].rootAssembly.Set(name='nodes_at_z_1000mm', nodes=
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes.getSequenceFromMask(
    mask=('[#0:54 #fffff000 #ffffffff:2 #7 ]', ), ))
mdb.models['Model-1'].rootAssembly.Set(name='nodes_at_z_0mm', nodes=
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes.getSequenceFromMask(
    mask=('[#ffffffff:2 #7fffff ]', ), ))
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName='Initial', 
    distributionType=UNIFORM, fieldName='', localCsys=None, name='BC-1', 
    region=mdb.models['Model-1'].rootAssembly.sets['nodes_at_z_0mm'], u1=SET, 
    u2=SET, u3=UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-0', nodeLabels=
    (('I_beam-1', (1, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-1', nodeLabels=
    (('I_beam-1', (2, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-2', nodeLabels=
    (('I_beam-1', (3, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-3', nodeLabels=
    (('I_beam-1', (4, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-4', nodeLabels=
    (('I_beam-1', (5, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-5', nodeLabels=
    (('I_beam-1', (6, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-6', nodeLabels=
    (('I_beam-1', (7, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-7', nodeLabels=
    (('I_beam-1', (8, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-8', nodeLabels=
    (('I_beam-1', (9, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-9', nodeLabels=
    (('I_beam-1', (10, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-10', 
    nodeLabels=(('I_beam-1', (11, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-11', 
    nodeLabels=(('I_beam-1', (12, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-12', 
    nodeLabels=(('I_beam-1', (13, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-13', 
    nodeLabels=(('I_beam-1', (14, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-14', 
    nodeLabels=(('I_beam-1', (15, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-15', 
    nodeLabels=(('I_beam-1', (16, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-16', 
    nodeLabels=(('I_beam-1', (17, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-17', 
    nodeLabels=(('I_beam-1', (18, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-18', 
    nodeLabels=(('I_beam-1', (19, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-19', 
    nodeLabels=(('I_beam-1', (20, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-20', 
    nodeLabels=(('I_beam-1', (21, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-21', 
    nodeLabels=(('I_beam-1', (22, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-22', 
    nodeLabels=(('I_beam-1', (23, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-23', 
    nodeLabels=(('I_beam-1', (24, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-24', 
    nodeLabels=(('I_beam-1', (25, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-25', 
    nodeLabels=(('I_beam-1', (26, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-26', 
    nodeLabels=(('I_beam-1', (27, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-27', 
    nodeLabels=(('I_beam-1', (28, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-28', 
    nodeLabels=(('I_beam-1', (29, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-29', 
    nodeLabels=(('I_beam-1', (30, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-30', 
    nodeLabels=(('I_beam-1', (31, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-31', 
    nodeLabels=(('I_beam-1', (32, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-32', 
    nodeLabels=(('I_beam-1', (33, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-33', 
    nodeLabels=(('I_beam-1', (34, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-34', 
    nodeLabels=(('I_beam-1', (35, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-35', 
    nodeLabels=(('I_beam-1', (36, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-36', 
    nodeLabels=(('I_beam-1', (37, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-37', 
    nodeLabels=(('I_beam-1', (38, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-38', 
    nodeLabels=(('I_beam-1', (39, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-39', 
    nodeLabels=(('I_beam-1', (40, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-40', 
    nodeLabels=(('I_beam-1', (41, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-41', 
    nodeLabels=(('I_beam-1', (42, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-42', 
    nodeLabels=(('I_beam-1', (43, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-43', 
    nodeLabels=(('I_beam-1', (44, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-44', 
    nodeLabels=(('I_beam-1', (45, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-45', 
    nodeLabels=(('I_beam-1', (46, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-46', 
    nodeLabels=(('I_beam-1', (47, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-47', 
    nodeLabels=(('I_beam-1', (48, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-48', 
    nodeLabels=(('I_beam-1', (49, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-49', 
    nodeLabels=(('I_beam-1', (50, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-50', 
    nodeLabels=(('I_beam-1', (51, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-51', 
    nodeLabels=(('I_beam-1', (52, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-52', 
    nodeLabels=(('I_beam-1', (53, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-53', 
    nodeLabels=(('I_beam-1', (54, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-54', 
    nodeLabels=(('I_beam-1', (55, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-55', 
    nodeLabels=(('I_beam-1', (56, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-56', 
    nodeLabels=(('I_beam-1', (57, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-57', 
    nodeLabels=(('I_beam-1', (58, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-58', 
    nodeLabels=(('I_beam-1', (59, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-59', 
    nodeLabels=(('I_beam-1', (60, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-60', 
    nodeLabels=(('I_beam-1', (61, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-61', 
    nodeLabels=(('I_beam-1', (62, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-62', 
    nodeLabels=(('I_beam-1', (63, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-63', 
    nodeLabels=(('I_beam-1', (64, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-64', 
    nodeLabels=(('I_beam-1', (65, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-65', 
    nodeLabels=(('I_beam-1', (66, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-66', 
    nodeLabels=(('I_beam-1', (67, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-67', 
    nodeLabels=(('I_beam-1', (68, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-68', 
    nodeLabels=(('I_beam-1', (69, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-69', 
    nodeLabels=(('I_beam-1', (70, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-70', 
    nodeLabels=(('I_beam-1', (71, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-71', 
    nodeLabels=(('I_beam-1', (72, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-72', 
    nodeLabels=(('I_beam-1', (73, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-73', 
    nodeLabels=(('I_beam-1', (74, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-74', 
    nodeLabels=(('I_beam-1', (75, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-75', 
    nodeLabels=(('I_beam-1', (76, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-76', 
    nodeLabels=(('I_beam-1', (77, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-77', 
    nodeLabels=(('I_beam-1', (78, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-78', 
    nodeLabels=(('I_beam-1', (79, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-79', 
    nodeLabels=(('I_beam-1', (80, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-80', 
    nodeLabels=(('I_beam-1', (81, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-81', 
    nodeLabels=(('I_beam-1', (82, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-82', 
    nodeLabels=(('I_beam-1', (83, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-83', 
    nodeLabels=(('I_beam-1', (84, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-84', 
    nodeLabels=(('I_beam-1', (85, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-85', 
    nodeLabels=(('I_beam-1', (86, )), ))
mdb.models['Model-1'].rootAssembly.SetFromNodeLabels(name='wall-86', 
    nodeLabels=(('I_beam-1', (87, )), ))
mdb.models['Model-1'].Equation(name='sum_of_u3', terms=[[1.0, 'wall-3', 3], 
    [1.0, 'wall-1', 3], [1.0, 'wall-2', 3], [1.0, 'wall-0', 3], [1.0, 'wall-4', 
    3], [1.0, 'wall-5', 3], [1.0, 'wall-6', 3], [1.0, 'wall-7', 3], [1.0, 
    'wall-8', 3], [1.0, 'wall-9', 3], [1.0, 'wall-10', 3], [1.0, 'wall-11', 3], 
    [1.0, 'wall-12', 3], [1.0, 'wall-13', 3], [1.0, 'wall-14', 3], [1.0, 
    'wall-15', 3], [1.0, 'wall-16', 3], [1.0, 'wall-17', 3], [1.0, 'wall-18', 
    3], [1.0, 'wall-19', 3], [1.0, 'wall-20', 3], [1.0, 'wall-21', 3], [1.0, 
    'wall-22', 3], [1.0, 'wall-23', 3], [1.0, 'wall-24', 3], [1.0, 'wall-25', 
    3], [1.0, 'wall-26', 3], [1.0, 'wall-27', 3], [1.0, 'wall-28', 3], [1.0, 
    'wall-29', 3], [1.0, 'wall-30', 3], [1.0, 'wall-31', 3], [1.0, 'wall-32', 
    3], [1.0, 'wall-33', 3], [1.0, 'wall-34', 3], [1.0, 'wall-35', 3], [1.0, 
    'wall-36', 3], [1.0, 'wall-37', 3], [1.0, 'wall-38', 3], [1.0, 'wall-39', 
    3], [1.0, 'wall-40', 3], [1.0, 'wall-41', 3], [1.0, 'wall-42', 3], [1.0, 
    'wall-43', 3], [1.0, 'wall-44', 3], [1.0, 'wall-45', 3], [1.0, 'wall-46', 
    3], [1.0, 'wall-47', 3], [1.0, 'wall-48', 3], [1.0, 'wall-49', 3], [1.0, 
    'wall-50', 3], [1.0, 'wall-51', 3], [1.0, 'wall-52', 3], [1.0, 'wall-53', 
    3], [1.0, 'wall-54', 3], [1.0, 'wall-55', 3], [1.0, 'wall-56', 3], [1.0, 
    'wall-57', 3], [1.0, 'wall-58', 3], [1.0, 'wall-59', 3], [1.0, 'wall-60', 
    3], [1.0, 'wall-61', 3], [1.0, 'wall-62', 3], [1.0, 'wall-63', 3], [1.0, 
    'wall-64', 3], [1.0, 'wall-65', 3], [1.0, 'wall-66', 3], [1.0, 'wall-67', 
    3], [1.0, 'wall-68', 3], [1.0, 'wall-69', 3], [1.0, 'wall-70', 3], [1.0, 
    'wall-71', 3], [1.0, 'wall-72', 3], [1.0, 'wall-73', 3], [1.0, 'wall-74', 
    3], [1.0, 'wall-75', 3], [1.0, 'wall-76', 3], [1.0, 'wall-77', 3], [1.0, 
    'wall-78', 3], [1.0, 'wall-79', 3], [1.0, 'wall-80', 3], [1.0, 'wall-81', 
    3], [1.0, 'wall-82', 3], [1.0, 'wall-83', 3], [1.0, 'wall-84', 3], [1.0, 
    'wall-85', 3], [1.0, 'wall-86', 3]])
mdb.models['Model-1'].Equation(name='moment_x_u3', terms=
    [[-0.00390337407588959, 'wall-1', 3], [-0.00942356884479523, 'wall-0', 3], 
    [-0.0102000087499619, 'wall-2', 3], [0.36039999127388, 'wall-4', 3], 
    [0.36430336534977, 'wall-5', 3], [0.369823560118675, 'wall-6', 3], 
    [0.370600000023842, 'wall-7', 3], [0.370600000023842, 'wall-8', 3], 
    [0.381499990820885, 'wall-9', 3], [0.381499990820885, 'wall-10', 3], 
    [0.370600000023842, 'wall-11', 3], [0.370600000023842, 'wall-12', 3], 
    [0.36430336534977, 'wall-13', 3], [0.369823560118675, 'wall-14', 3], 
    [0.36039999127388, 'wall-15', 3], [0.0, 'wall-16', 3], 
    [-0.00942356884479523, 'wall-17', 3], [-0.00390337407588959, 'wall-18', 3], 
    [-0.0102000087499619, 'wall-19', 3], [-0.0102000087499619, 'wall-20', 3], 
    [-0.0210999995470047, 'wall-21', 3], [-0.0210999995470047, 'wall-22', 3], 
    [-0.0102000087499619, 'wall-23', 3], [-0.00721248984336853, 'wall-24', 3], 
    [0.0514857172966003, 'wall-25', 3], [0.10297142714262, 'wall-26', 3], 
    [0.154457138851285, 'wall-27', 3], [0.205942852422595, 'wall-28', 3], 
    [0.25742856413126, 'wall-29', 3], [0.30891427397728, 'wall-30', 3], 
    [0.367612481117249, 'wall-31', 3], [0.381499990820885, 'wall-32', 3], 
    [0.381499990820885, 'wall-33', 3], [0.381499990820885, 'wall-34', 3], 
    [0.367612481117249, 'wall-35', 3], [0.30891427397728, 'wall-36', 3], 
    [0.25742856413126, 'wall-37', 3], [0.205942852422595, 'wall-38', 3], 
    [0.154457138851285, 'wall-39', 3], [0.10297142714262, 'wall-40', 3], 
    [0.0514857172966003, 'wall-41', 3], [-0.00721248984336853, 'wall-42', 3], 
    [-0.0210999995470047, 'wall-43', 3], [-0.0210999995470047, 'wall-44', 3], 
    [-0.0210999995470047, 'wall-45', 3], [0.365714535117149, 'wall-46', 3], 
    [-0.00660146772861481, 'wall-47', 3], [-0.00631032884120941, 'wall-48', 3], 
    [0.367575839161873, 'wall-49', 3], [-0.00890009105205536, 'wall-50', 3], 
    [-0.00951063632965088, 'wall-51', 3], [0.369369462132454, 'wall-52', 3], 
    [0.362276270985603, 'wall-53', 3], [-0.0025056004524231, 'wall-54', 3], 
    [0.370017930865288, 'wall-55', 3], [-0.0105656534433365, 'wall-56', 3], 
    [0.373011261224747, 'wall-57', 3], [-0.0149760544300079, 'wall-58', 3], 
    [0.373255997896194, 'wall-59', 3], [-0.0116962492465973, 'wall-60', 3], 
    [-0.0112072676420212, 'wall-61', 3], [0.00546635687351227, 'wall-62', 3], 
    [0.353938430547714, 'wall-63', 3], [0.370297104120255, 'wall-64', 3], 
    [0.308417201042175, 'wall-65', 3], [0.375965863466263, 'wall-66', 3], 
    [0.373108103871346, 'wall-67', 3], [0.372083812952042, 'wall-68', 3], 
    [0.367268398404121, 'wall-69', 3], [-0.00676804780960083, 'wall-70', 3], 
    [-0.0126584768295288, 'wall-71', 3], [0.375365316867828, 'wall-72', 3], 
    [-0.0150513499975204, 'wall-73', 3], [-0.0141250193119049, 'wall-74', 3], 
    [-0.0168830007314682, 'wall-75', 3], [-0.0156572014093399, 'wall-76', 3], 
    [0.374344319105148, 'wall-77', 3], [0.377131476998329, 'wall-78', 3], 
    [0.376108646392822, 'wall-79', 3], [0.0519076585769653, 'wall-80', 3], 
    [0.257408156991005, 'wall-81', 3], [0.205985296517611, 'wall-82', 3], 
    [0.103038877248764, 'wall-83', 3], [0.15446500852704, 'wall-84', 3], 
    [0.375067934393883, 'wall-85', 3], [0.371568992733955, 'wall-86', 3]])
mdb.models['Model-1'].Equation(name='moment_y_u3', terms=[[-2.62332611937505, 
    'wall-2', 3], [-2.42050768382538, 'wall-0', 3], [92.3303747647461, 
    'wall-4', 3], [93.3295983360168, 'wall-5', 3], [94.7382891903992, 'wall-6', 
    3], [94.933300883385, 'wall-7', 3], [94.8585008847216, 'wall-8', 3], 
    [97.6509544351948, 'wall-9', 3], [97.8286544332159, 'wall-10', 3], 
    [95.0362008827428, 'wall-11', 3], [94.9614008840794, 'wall-12', 3], 
    [93.3388511934337, 'wall-13', 3], [94.7585824485297, 'wall-14', 3], 
    [92.3380747647044, 'wall-15', 3], [0.00769999995827675, 'wall-16', 3], 
    [-2.40021442569483, 'wall-17', 3], [-0.991523571312428, 'wall-18', 3], 
    [-2.59522611868065, 'wall-19', 3], [-2.52042612001729, 'wall-20', 3], 
    [-5.31287967049047, 'wall-21', 3], [-5.49057966851159, 'wall-22', 3], 
    [-2.69812611803841, 'wall-23', 3], [-1.850745297752, 'wall-24', 3], 
    [13.1900546285374, 'wall-25', 3], [26.3801073483209, 'wall-26', 3], 
    [39.5701605452928, 'wall-27', 3], [52.7602142194533, 'wall-28', 3], 
    [65.9502674164252, 'wall-29', 3], [79.1403201362087, 'wall-30', 3], 
    [94.1751450405174, 'wall-31', 3], [97.6953794347001, 'wall-32', 3], 
    [97.7398044342054, 'wall-33', 3], [97.7842294337107, 'wall-34', 3], 
    [94.1888200624564, 'wall-35', 3], [79.148020136167, 'wall-36', 3], 
    [65.9579674163835, 'wall-37', 3], [52.7679142194115, 'wall-38', 3], 
    [39.5778605452511, 'wall-39', 3], [26.3878073482791, 'wall-40', 3], 
    [13.1977546284957, 'wall-41', 3], [-1.83707027581302, 'wall-42', 3], 
    [-5.44615466900631, 'wall-43', 3], [-5.40172966950103, 'wall-44', 3], 
    [-5.35730466999575, 'wall-45', 3], [93.696094094406, 'wall-46', 3], 
    [-1.68810219959831, 'wall-47', 3], [-1.61642750354098, 'wall-48', 3], 
    [94.1707311847799, 'wall-49', 3], [-2.28234402227855, 'wall-50', 3], 
    [-2.42908645255102, 'wall-51', 3], [94.6387897041382, 'wall-52', 3], 
    [92.8149804054197, 'wall-53', 3], [-0.638230378424751, 'wall-54', 3], 
    [94.7996469443738, 'wall-55', 3], [-2.70454306706376, 'wall-56', 3], 
    [95.565031072497, 'wall-57', 3], [-3.83509545358595, 'wall-58', 3], 
    [95.6204496225406, 'wall-59', 3], [-3.02000772616322, 'wall-60', 3], 
    [-2.88207096861696, 'wall-61', 3], [1.40419513554203, 'wall-62', 3], 
    [90.6788812632177, 'wall-63', 3], [94.8655960230098, 'wall-64', 3], 
    [79.016826700021, 'wall-65', 3], [96.3197892091363, 'wall-66', 3], 
    [95.6156737318047, 'wall-67', 3], [95.3430408928565, 'wall-68', 3], 
    [94.0969595673197, 'wall-69', 3], [-1.72757996848554, 'wall-70', 3], 
    [-3.23324471835701, 'wall-71', 3], [96.1199448315425, 'wall-72', 3], 
    [-3.80365549561345, 'wall-73', 3], [-3.58474627442493, 'wall-74', 3], 
    [-4.29195641117386, 'wall-75', 3], [-3.99637574827746, 'wall-76', 3], 
    [95.877478431323, 'wall-77', 3], [96.591944098936, 'wall-78', 3], 
    [96.346818705529, 'wall-79', 3], [13.3019990837466, 'wall-80', 3], 
    [65.9488893272014, 'wall-81', 3], [52.7749378942958, 'wall-82', 3], 
    [26.4012373462313, 'wall-83', 3], [39.5760266666382, 'wall-84', 3], 
    [96.0970996688401, 'wall-85', 3], [95.2002440028931, 'wall-86', 3]])
mdb.models['Model-1'].rootAssembly.DatumCsysByThreePoints(coordSysType=
    CARTESIAN, name='end', origin=
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].vertices[4], 
    point1=mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].vertices[5]
    , point2=
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].InterestingPoint(
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].edges[8], MIDDLE))
mdb.models['Model-1'].rootAssembly.ReferencePoint(point=(0.0, 0.0, 1.0))
mdb.models['Model-1'].ConnectorSection(name='warping', translationalType=SLOT)
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1740]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1741]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1742]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1743]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1744]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1745]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1746]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1747]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1748]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1749]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1750]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1751]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1752]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1753]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1754]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1755]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1756]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1757]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1758]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1759]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1760]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1761]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1762]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1763]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1764]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1765]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1766]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1767]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1768]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1769]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1770]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1771]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1772]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1773]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1774]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1775]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1776]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1777]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1778]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1779]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1780]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1781]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1782]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1783]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1784]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1785]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1786]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1787]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1788]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1789]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1790]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1791]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1792]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1793]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1794]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1795]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1796]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1797]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1798]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1799]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1800]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1801]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1802]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1803]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1804]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1805]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1806]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1807]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1808]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1809]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1810]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1811]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1812]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1813]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1814]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1815]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1816]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1817]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1818]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1819]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1820]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1821]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1822]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1823]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1824]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1825]), ))
mdb.models['Model-1'].rootAssembly.WirePolyLine(mergeType=IMPRINT, meshable=OFF
    , points=((mdb.models['Model-1'].rootAssembly.referencePoints[94], 
    mdb.models['Model-1'].rootAssembly.instances['I_beam-1'].nodes[1826]), ))
mdb.models['Model-1'].rootAssembly.Set(edges=
    mdb.models['Model-1'].rootAssembly.edges, name='Wire-Set-loading')
mdb.models['Model-1'].rootAssembly.SectionAssignment(region=
    mdb.models['Model-1'].rootAssembly.sets['Wire-Set-loading'], sectionName=
    'warping')
mdb.models['Model-1'].rootAssembly.sectionAssignments[0].getSet()
mdb.models['Model-1'].rootAssembly.ConnectorOrientation(localCsys1=
    mdb.models['Model-1'].rootAssembly.datums[93], region=
    mdb.models['Model-1'].rootAssembly.allSets['Wire-Set-loading'])
mdb.models['Model-1'].rootAssembly.Set(name='loading', referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[94], ))
mdb.models['Model-1'].Moment(cm3=100.0, createStepName='loading', 
    distributionType=UNIFORM, field='', localCsys=None, name='Load-2', region=
    mdb.models['Model-1'].rootAssembly.sets['loading'])
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, name=
    'analysis', nodalOutputPrecision=SINGLE, queue=None, resultsFormat=ODB, 
    scratch='', type=ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['analysis'].submit(consistencyChecking=OFF)
mdb.jobs['analysis'].waitForCompletion()
